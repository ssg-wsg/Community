# Copyright 2020 Amazon.com, Inc. or its affiliates. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License").
# You may not use this file except in compliance with the License.
# A copy of the License is located at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# or in the "license" file accompanying this file. This file is distributed
# on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either
# express or implied. See the License for the specific language governing
# permissions and limitations under the License.

AWSTemplateFormatVersion: "2010-09-09"
Description: >
  This template creates an IAM role for DevOps SAM application.
Parameters:
  RepositoryName:
    Description: CodeComit repository name for DevOps code
    Type: String
    Default: amb-fabric-devops
  AMBDevopsRegion:
    Type: String
    Description: The region where devops application is deployed
  AMBDevOpsSAMRoleName:
    Type: String
    Description: Name of the IAM role for DevOps SAM application
  AMBDevOpsCloudWatchEventRoleName:
    Description: Name of an IAM role for AMB DevOps CloudWatchEvent
    Type: String
  AMBDevOpsCodeBuildRoleName:
    Description: Name of an IAM role for AMB DevOps CodeBuild
    Type: String
  BoundaryPolicyARN:
    Description: An ARN of a boundary policy, if exists
    Type: String
  StackPrefix:
    Description: A prefix for all CloudFormation stacks in DevOps
    Type: String
  LambdaPrefix:
    Description: A prefix for all Lambda functions in DevOps
    Type: String
  RolesPrefix:
    Description: A prefix for all IAM roles in DevOps
    Type: String
  PoliciesPrefix:
    Description: A prefix for all IAM policies in DevOps
    Type: String
  ChannelS3BucketPrefix:
    Description: A prefix for all channel S3 buckets in DevOps
    Type: String
  AMBAppsBuildBucketPrefix:
    Description: A prefix for S3 buckets in Apps
    Type: String
  AMBDevOpsBuildBucketPrefix:
    Description: A prefix for S3 buckets in DevOps
    Type: String
  AMBDevOpsCodeBuildProjectNamePrefix:
    Description: A prefix for CodeBuild projects in DevOps
    Type: String
  AMBDevOpsSNSCWAlarmTopicNamePrefix:
    Description: A prefix for SNS topics for CloudWatch alarms in DevOps
    Type: String
  AMBDevOpsCloudWatchNamePrefix:
    Description: A prefix for CloudWatch related resources in DevOps
    Type: String
Conditions:
  BoundaryPolicyARNExists:
    Fn::Not:
      - Fn::Equals:
          - ""
          - !Ref BoundaryPolicyARN
Resources:
  AMBDevOpsSAMRole:
    Type: AWS::IAM::Role
    Properties:
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole"
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      PermissionsBoundary:
        Fn::If:
          - BoundaryPolicyARNExists
          - !Ref BoundaryPolicyARN
          - !Ref "AWS::NoValue"
      Tags:
        - Key: AMBDevOps
          Value: AMBDevOpsSAMRole
      RoleName: !Ref AMBDevOpsSAMRoleName
      Policies:
        - PolicyName: !Sub "${PoliciesPrefix}-SecretsManagerReadWriteAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - secretsmanager:GetSecretValue
                  - secretsmanager:DescribeSecret
                  - secretsmanager:PutSecretValue
                  - secretsmanager:CreateSecret
                  - secretsmanager:UpdateSecretVersionStage
                  - secretsmanager:RotateSecret
                  - secretsmanager:DeleteSecret
                  - secretsmanager:ListSecretVersionIds
                  - secretsmanager:TagResource
                  - secretsmanager:UpdateSecret
                Resource: !Sub "arn:aws:secretsmanager:${AWS::Region}:${AWS::AccountId}:secret:/amb/*"
        - PolicyName: !Sub "${PoliciesPrefix}-CloudWatchAndLogs"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - cloudwatch:PutMetricData
                  - cloudwatch:PutMetricAlarm
                  - cloudwatch:DescribeAlarms
                  - cloudformation:describeStacks
                Resource: "*"
              - Effect: Allow
                Action:
                  - logs:*
                Resource: arn:aws:logs:*:*:*
        - PolicyName: !Sub "${PoliciesPrefix}-ManagedBlockchainManager"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - managedblockchain:GetNetwork
                  - managedblockchain:ListMembers
                  - managedblockchain:ListNetworks
                  - managedblockchain:GetNode
                  - managedblockchain:GetMember
                  - managedblockchain:DeleteNode
                  - managedblockchain:CreateNode
                  - managedblockchain:ListNodes
                Resource: "*"
        - PolicyName: !Sub "${PoliciesPrefix}-ParameterStoreReadWriteAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - ssm:PutParameter
                  - ssm:LabelParameterVersion
                  - ssm:DeleteParameter
                  - ssm:RemoveTagsFromResource
                  - ssm:GetParameterHistory
                  - ssm:AddTagsToResource
                  - ssm:GetParametersByPath
                  - ssm:GetParameters
                  - ssm:GetParameter
                  - ssm:DeleteParameters
                Resource: !Sub "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter/amb*"
              - Sid: VisualEditor1
                Effect: Allow
                Action: ssm:DescribeParameters
                Resource: "*"
        - PolicyName: !Sub "${PoliciesPrefix}-LambdaQuery"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - lambda:ListFunctions
                  - lambda:GetFunction
                  - lambda:GetFunctionConfiguration
                Resource: "*"
        - PolicyName: !Sub "${PoliciesPrefix}-LambdaInvoke"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - lambda:InvokeFunction
                Resource: !Sub "arn:aws:lambda:${AMBDevopsRegion}:${AWS::AccountId}:function:${LambdaPrefix}*"
        - PolicyName: !Sub "${PoliciesPrefix}-LambdaVPCAccessInstantiationRole"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Sid: VisualEditor0
                Effect: Allow
                Action:
                  - ec2:DescribeSubnets
                  - ec2:DescribeSecurityGroups
                Resource: "*"
        - PolicyName: !Sub "${PoliciesPrefix}-ChannelS3ReadWriteAccess"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Action:
                  - s3:GetObject
                Effect: Allow
                Resource: arn:aws:s3:::*/*
              # - Action:
              #     - s3:DeleteObject
              #     - s3:GetObject
              #     - s3:PutObject
              #     - s3:PutObjectAcl
              #   Effect: Allow
              #   Resource: arn:aws:s3:::codepipeline-*/*
              - Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:PutBucketPolicy
                  - s3:GetBucketEncryption
                  - s3:DeleteBucketEncryption
                  - s3:PutBucketEncryption
                  - s3:GetEncryptionConfiguration
                Effect: Allow
                Resource: !Sub arn:aws:s3:::${ChannelS3BucketPrefix}*/*
              - Action:
                  - s3:DeleteObject
                  - s3:GetObject
                  - s3:PutObject
                  - s3:PutObjectAcl
                  - s3:CreateBucket
                  - s3:DeleteBucket
                  - s3:PutBucketPolicy
                  - s3:GetBucketEncryption
                  - s3:DeleteBucketEncryption
                  - s3:PutBucketEncryption
                  - s3:GetBucketAcl
                  - s3:PutBucketAcl
                Effect: Allow
                Resource: !Sub arn:aws:s3:::${ChannelS3BucketPrefix}*
  AMBDevOpsCodeBuildRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref AMBDevOpsCodeBuildRoleName
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      PermissionsBoundary:
        Fn::If:
          - BoundaryPolicyARNExists
          - !Ref BoundaryPolicyARN
          - !Ref "AWS::NoValue"
      Policies:
        - PolicyName: !Sub "${PoliciesPrefix}-BuildPolicy"
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: "Allow"
                Action:
                  - "cloudformation:Get*"
                  - "cloudformation:Describe*"
                  - "cloudformation:List*"
                  - "cloudformation:CreateChangeSet"
                  - "cloudformation:ExecuteChangeSet"
                Resource:
                  - !Sub "arn:aws:cloudformation:${AMBDevopsRegion}:${AWS::AccountId}:stack/${StackPrefix}*"
              - Effect: "Allow"
                Action:
                  - "codecommit:ListBranches"
                  - "codecommit:ListRepositories"
                  - "codecommit:BatchGetRepositories"
                  - "codecommit:Get*"
                  - "codecommit:GitPull"
                Resource:
                  #- !Sub "arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${RepositoryName}"
                  - "*"
              - Effect: "Allow"
                Action:
                  - "ec2:Describe*"
                  - "ec2:CreateVpc*"
                  - "ec2:AssociateVpc*"
                  - "ec2:ModifyVpc*"
                  - "ec2:CreateSubnet"
                  - "ec2:ModifySubnetAttribute"
                  - "ec2:AssociateSubnetCidrBlock"
                  - "ec2:CreateFlowLogs"
                  - "ec2:CreateNetwork*"
                  - "ec2:CreateSecurityGroup*"
                  - "ec2:AuthorizeSecurityGroup*"
                  - "ec2:UpdateSecurityGroupRuleDescriptions*"
                  - "ec2:CreateRouteTable*"
                  - "ec2:AssociateRouteTable*"
                  - "ec2:ReplaceRouteTable*"
                  - "ec2:CreateVpcEndpoint*"
                  - "ec2:CreateTags"
                  - "ec2:DeleteVpc*"
                  - "ec2:DisassociateVpc*"
                  - "ec2:DeleteSubnet"
                  - "ec2:DisassociateSubnetCidrBlock"
                  - "ec2:DeleteSecurityGroup*"
                  - "ec2:RevokeSecurityGroup*"
                  - "ec2:DeleteRouteTable*"
                  - "ec2:DisassociateRouteTable"
                  - "ec2:DeleteVpcEndpoint*"
                  - "cloudformation:ValidateTemplate"
                  - "elasticloadbalancing:Describe*"
                  - "autoscaling:Describe*"
                  - "logs:Describe*"
                  - "logs:Get*"
                  - "tag:Get*"
                Resource:
                  - "*"
              - Effect: "Allow"
                Action:
                  - "iam:PassRole"
                Resource:
                  - !Sub "arn:aws:iam::${AWS::AccountId}:role/${RolesPrefix}*"
              - Effect: "Allow"
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                Resource:
                  - !Sub "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*"
              - Effect: "Allow"
                Action:
                  - "cloudformation:CreateChangeSet"
                Resource: !Sub "arn:aws:cloudformation:${AMBDevopsRegion}:aws:transform/Serverless-2016-10-31"
              - Effect: "Allow"
                Action:
                  - "lambda:CreateFunction"
                  - "lambda:TagResource"
                  - "lambda:ListVersionsByFunction"
                  - "lambda:GetLayerVersion"
                  - "lambda:PublishLayerVersion"
                  - "lambda:InvokeAsync"
                  - "lambda:GetAccountSettings"
                  - "lambda:GetFunctionConfiguration"
                  - "lambda:CreateEventSourceMapping"
                  - "lambda:GetLayerVersionPolicy"
                  - "lambda:UntagResource"
                  - "lambda:PutFunctionConcurrency"
                  - "lambda:ListTags"
                  - "lambda:DeleteLayerVersion"
                  - "lambda:ListLayerVersions"
                  - "lambda:ListLayers"
                  - "lambda:DeleteFunction"
                  - "lambda:GetAlias"
                  - "lambda:UpdateEventSourceMapping"
                  - "lambda:ListFunctions"
                  - "lambda:GetEventSourceMapping"
                  - "lambda:InvokeFunction"
                  - "lambda:GetFunction"
                  - "lambda:ListAliases"
                  - "lambda:UpdateFunctionConfiguration"
                  - "lambda:UpdateAlias"
                  - "lambda:UpdateFunctionCode"
                  - "lambda:ListEventSourceMappings"
                  - "lambda:DeleteAlias"
                  - "lambda:PublishVersion"
                  - "lambda:DeleteFunctionConcurrency"
                  - "lambda:DeleteEventSourceMapping"
                  - "lambda:GetPolicy"
                  - "lambda:CreateAlias"
                  - "lambda:AddPermission"
                Resource:
                  - !Sub "arn:aws:lambda:${AMBDevopsRegion}:${AWS::AccountId}:function:${LambdaPrefix}*"
                  - !Sub "arn:aws:lambda:${AMBDevopsRegion}:${AWS::AccountId}:layer:${LambdaPrefix}*"
              - Effect: "Allow"
                Action:
                  - "s3:PutObject"
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:ListBucket"
                  - "s3:ListMultipartUploadParts"
                  - "s3:ListBucketMultipartUploads"
                  - "s3:AbortMultipartUpload"
                  - "s3:Create*"
                  - "s3:Delete*"
                  - "s3:Add*"
                  - "s3:Attach*"
                  - "s3:Put*"
                Resource:
                  - !Sub "arn:aws:s3:::${AMBAppsBuildBucketPrefix}*"
                  - !Sub "arn:aws:s3:::${AMBAppsBuildBucketPrefix}*/*"
                  - !Sub "arn:aws:s3:::${AMBDevOpsBuildBucketPrefix}*"
                  - !Sub "arn:aws:s3:::${AMBDevOpsBuildBucketPrefix}*/*"
              - Effect: "Allow"
                Action:
                  - "SNS:CreateTopic"
                  - "SNS:DeleteTopic"
                  - "SNS:ConfirmSubscription"
                  - "SNS:Get*"
                  - "SNS:List*"
                  - "SNS:Subscribe"
                  - "SNS:TagResource"
                  - "SNS:Unsubscribe"
                  - "SNS:UntagResource"
                Resource:
                  - !Sub "arn:aws:sns:${AMBDevopsRegion}:${AWS::AccountId}:*"
              - Effect: "Allow"
                Action:
                  - "events:Put*"
                  - "events:Remove*"
                  - "events:List*"
                  - "events:DeleteRule"
                  - "events:EnableRule"
                  - "events:DisableRule"
                  - "events:Describe*"
                  - "events:TagResource"
                  - "events:UntagResource"
                Resource:
                  - !Sub "arn:aws:events:${AMBDevopsRegion}:${AWS::AccountId}:event-source/${AMBDevOpsCloudWatchNamePrefix}*"
                  - !Sub "arn:aws:events:${AMBDevopsRegion}:${AWS::AccountId}:rule/${AMBDevOpsCloudWatchNamePrefix}*"
  AMBDevOpsCloudWatchEventRole:
    Type: "AWS::IAM::Role"
    Properties:
      RoleName: !Ref AMBDevOpsCloudWatchEventRoleName
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - events.amazonaws.com
            Action: "sts:AssumeRole"
      Path: /
      PermissionsBoundary:
        Fn::If:
          - BoundaryPolicyARNExists
          - !Ref BoundaryPolicyARN
          - !Ref "AWS::NoValue"
Outputs:
  AMBDevOpsSAMRoleARN:
    Description: "Name of the IAM role for DevOps SAM application"
    Value: !GetAtt AMBDevOpsSAMRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-AMBDevOpsSAMRoleARN"
  AMBDevOpsCloudWatchEventRoleARN:
    Description: "Name of an IAM role for AMB DevOps CloudWatchEvent"
    Value: !GetAtt AMBDevOpsCloudWatchEventRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-AMBDevOpsCloudWatchEventRoleARN"
  AMBDevOpsCodeBuildRoleARN:
    Description: "Name of an IAM role for AMB DevOps CodeBuild"
    Value: !GetAtt AMBDevOpsCodeBuildRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-AMBDevOpsCodeBuildRoleARN"

